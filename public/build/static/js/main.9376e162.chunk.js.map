{"version":3,"sources":["app_img.jpg","actions/constants.js","utils/setAuthToken.js","actions/authActions.js","base/Header.js","base/NotFound.js","base/PrivateRoute.js","base/TestPrivateRoute.js","base/TextInputGroup.js","menu/Login.js","menu/Register.js","home/UserHomePage.js","actions/questionActions.js","test_submission/FinalSubmission.js","test_page/TestCheckBox.js","test_page/QuestionNavigator.js","test_page/QuestionTimer.js","test_page/QuestionBottomNav.js","test_page/UserTest.js","home/Home.js","admin/common/TopBar.js","admin/common/AdminNavSide.js","admin/common/BreadCrum.js","admin/AdminLogin.js","admin/AllQuizResults.js","actions/quizActions.js","base/AdminPrivate.js","admin/AdminMain.js","RHome.js","reducers/profileReducer.js","reducers/authReducer.js","reducers/questionsReducers.js","reducers/quizResultReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","R_Quiz_Results","NOR","ADMIN","setAuthToken","token","axios","defaults","headers","common","initLogin","p","type","dispatch","a","post","res","res_d","data","Status","localStorage","setItem","setCurrentUser","setCurrentAdmin","action","payload","Message","initLogout","Token","Admin_Token","req_d","removeItem","decoded","Header","onLogoutClicked","e","props","isAuthenticated","this","auth","_login_option","checkAndShowLoginOpts","className","href","src","app_img","alt","onClick","Component","connect","state","errors","NotFound","onError","component","rest","render","to","TextInputGroup","name","value","label","placeholder","onChange","error","classnames","Login","preventDefault","email","password","setState","pro","target","checkForFailedMessage","nextProps","failedMessage","isToggleOn","history","push","onSubmit","Register","c_password","initRegister","UserHomePage","onStartClick","creatQuizSession","style","listStyleType","prevState","isQuizTokenPresent","getItem","getAllQuestions","questions","FinalSubmission","onClose","score","TestCheckBox","optionContent","checked","isChecked","toggleChange","index","QuestionNavigator","testContentCount","defaultQIndex","testContent","m_t","onJumpToAnotherQuestion","map","_testObj","i","indexOf","_itemSelectedcolor","answered","QuestionTimer","startTimer","onTimerOver","timer","seconds","setInterval","countDown","time","bind","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","secondsToTime","clearInterval","m","s","QuestionBottomNav","onPreviousClicked","onNextClicked","UserTest","quizToken","console","log","sumbitResult","length","quesTemp","options","Object","keys","_opt","_k","key","question","Home","isVisible","match","location","pathname","exact","path","url","TopBar","onLogout","id","AdminNavSide","BreadCrum","AdminLogin","isAdminAuthenticated","htmlFor","AllQuizResults","all_results","componentDidMount","window","scrollTo","getAllQuizeResults","_td","_a","quizResults","quizResList","AdminMain","RHome","isP","includes","withRouter","initailState","initialState","adminToken","combineReducers","profile","finalScore","middelware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","res_admin_d","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9376e162.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app_img.82f6de72.jpg\";","export const LOADING = 'LOADING'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const SET_ADMIN_TOKEN = 'SET_ADMIN_TOKEN'\nexport const FAILED = 'FAILED'\nexport const AUTH_FAILED = 'AUTH_FAILED'\nexport const GET_QUESTIONS = 'GET_QUESTIONS'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const CREATE_QUIZ_SESSION = 'CREATE_QUIZ_SESSION'\nexport const ON_QUIZ_SUBMIT = 'ON_QUIZ_SUBMIT'\nexport const DISPOSE_QUIZ_SUBMIT = 'DISPOSE_QUIZ_SUBMIT'\nexport const ON_TIMER_CHANGE = 'ON_TIMER_CHANGE'\nexport const GET_ALL_RESULTS = 'GET_ALL_RESULTS'\nexport const PROFILE_FAILED = 'PROFILE_FAILED'\n\n\n\n\n\n\n\nexport const FIRST_PARA = 'fpara'\nexport const PARA = 'para'\nexport const INLINE_IMG = 'inline-img'\nexport const BLOCK_IMG = 'block-img'\nexport const POINTER = 'pointer'\nexport const QUOTE = 'quote'\n\nexport const TOKEN = 'Token'\nexport const ADMIN_TOKEN = 'Admin_Token'\nexport const TEST_TOKEN = 'Test_Token'\nexport const ARTICLE_ID = 'Article_id'\n\n\n\n\nexport const R_Login = '/login'\nexport const R_Register = '/register'\nexport const R_USER_HOME = '/'\nexport const R_MAIN_TEST = '/main-test'\nexport const R_SCORE_PAGE = '/score-page'\n\n\n\n\nexport const R_Admin = '/adminn'\nexport const R_Quiz_Results = '/adminn/all-quiz-results'\n\n\nexport const BASE_URL = \"http://localhost:3001\"\n\nexport const NOR = 'nor'\nexport const ADMIN = 'admin'\n\n\n\n\n\n\n","import axios from 'axios'\n\nconst setAuthToken = token => {\n    if(token){\n        // apply to every request\n        axios.defaults.headers.common['Authorization'] = token\n    }else {\n        // delete auth header\n        delete axios.defaults.headers.common['Autherization']\n    }\n}\n\nexport default setAuthToken","import { SET_TOKEN, AUTH_FAILED, SET_ADMIN_TOKEN, ADMIN_TOKEN, NOR , ADMIN, R_Login, R_MAIN_TEST, CREATE_QUIZ_SESSION, FAILED, DISPOSE_QUIZ_SUBMIT, ON_TIMER_CHANGE} from './constants'\nimport axios from 'axios'\nimport setAuthToken from '../utils/setAuthToken';\n\nimport { TOKEN, REGISTER_SUCCESS, TEST_TOKEN } from '../actions/constants';\n\n\nexport const initLogin = (p, type = 'nor') => async dispatch => {\n    //dispatch({ type : LOADING })\n    p.type = type\n    const res = await axios.post('/api/auth/login', p)\n\n    const res_d = res.data\n\n    if(res_d.Status){\n        // set token to localstorage\n        if(type === 'nor'){\n            localStorage.setItem(TOKEN, res_d.token)\n            dispatch(setCurrentUser(res_d))\n        }else {\n            localStorage.setItem(ADMIN_TOKEN, res_d.token)\n            dispatch(setCurrentAdmin(res_d))\n        }\n        \n        \n    }else {\n        const action = {type : AUTH_FAILED,payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\nexport const initLogout = (type) => async dispatch => {\n    //dispatch({ type : LOADING })\n    let token = ''\n    if(type === NOR){\n        token = localStorage.Token\n    }else {\n        token = localStorage.Admin_Token\n    }\n    const req_d = { token }\n    const res = await axios.post('/api/auth/logout', req_d)\n    const res_d = res.data\n    \n\n    if(res_d.Status){\n        if(type === NOR){\n            localStorage.removeItem(TOKEN)\n            setAuthToken(false)\n            dispatch(setCurrentUser({}))\n        }else {\n            localStorage.removeItem(ADMIN_TOKEN)\n            //setAuthToken(false)\n            dispatch(setCurrentAdmin({}))\n        }\n        \n        \n        \n    }else {\n        const action = {type : AUTH_FAILED, payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\nexport const initRegister = (p,history) => async dispatch => {\n\n    const res = await axios.post('/api/auth/register', p)\n\n    const res_d = res.data\n\n    if(res_d.Status){\n        // set token to localstorage\n        \n        history.push(R_Login)\n        const action = {type : REGISTER_SUCCESS ,payload : res_d.Message}\n        dispatch(action)\n        \n    }else {\n        const action = {type : AUTH_FAILED,payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\nexport const onClose = () => async dispatch => {\n    const action = {type : DISPOSE_QUIZ_SUBMIT ,payload : {}}\n    dispatch(action)\n}\n\n\nexport const onTimerChange = (timer) => async dispatch => {\n    const action = {type : ON_TIMER_CHANGE ,payload : timer}\n    dispatch(action)\n}\n\n\n\n\n\nexport const creatQuizSession = (history) => async dispatch => {\n\n    let p = localStorage.getItem(TOKEN)\n\n    const res = await axios.post('/api/quiz/createQuizSession', {token : p})\n    const res_d = res.data\n\n    if(res_d.Status){\n        \n        const action = {type : CREATE_QUIZ_SESSION ,payload : res_d.token}\n        dispatch(action)\n        \n    }else {\n        const action = {type : FAILED,payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\n\n\n\n// set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type : SET_TOKEN,\n        payload : decoded\n    }\n}\n\n\n// set logged in user\nexport const setCurrentAdmin = decoded => {\n    return {\n        type : SET_ADMIN_TOKEN,\n        payload : decoded\n    }\n}\n\n    \n\n\n","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport app_img from '../app_img.jpg';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { initLogout } from '../actions/authActions'\nimport { NOR} from '../actions/constants';\n\n\nclass Header extends Component {\n\n\n  onLogoutClicked = (e) => {\n    this.props.initLogout(NOR);\n  }\n\n\n  render() {\n    let { isAuthenticated } = this.props.auth\n    let _login_option = this.checkAndShowLoginOpts(isAuthenticated)\n    \n    return ( \n    <div>\n      <section className=\"fixed bg-white h-12 w-full top-0 flex shadow-md justify-between px-4\">\n              <div className=\"w-1/3 h-full flex content-center flex-wrap cursor-pointer\">\n                  <Link href=\"\" className=\"text-center flex items-center\">\n\n                    <div className=\"w-8 h-8\">\n                      <img src={app_img} className=\"rounded-full shadow-md\"alt=\"asdasd\"/>\n                    </div>\n                    <p className=\"content-center text-black pl-2 app-font-top\">EVALUATOR</p>\n                  </Link>\n              </div>\n              {_login_option}\n            \n          </section>\n\n      </div>\n    )\n  }\n\n  checkAndShowLoginOpts(isAuthenticated){\n    return isAuthenticated ? \n    (\n      <div className=\"w-1/3 h-full flex content-center justify-end\n      flex-wrap cursor-pointer\">\n        <botton onClick={this.onLogoutClicked} className=\"inline-block bg-indigo-500\n        text-white px-2 py-2 uppercase tracking-wider \n        text-xs font-semibold rounded-lg shadow-md \n         \">Logout</botton>\n      </div>\n    ) : null\n  }\n}\n\nHeader.propTypes = {\n  loginUser : PropTypes.func.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth,\n  errors : state.errors\n})\n\n\n\nexport default connect(mapStateToProps, {initLogout})(Header)\n","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n\n\n    componentDidMount(){\n        this.props.onError()\n    }\n\n    render() {\n        let { data } = this.props\n\n        return (\n        <div>\n            <h1 className=\"display-4 lead mt-4\"><span className=\"text-primary\">404 {data}</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, this page doent exists!!</p>\n        </div>\n        )\n    }\n}\n\n\nexport default NotFound","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { R_Login } from '../actions/constants';\nconst PrivateRoute = ({component : Component,auth, ...rest}) => (\n    <Route \n    {...rest}\n    render = {props => \n        auth.isAuthenticated === true ? \n        (<Component {...props}/>) \n        : \n        (<Redirect to={R_Login}/>)}\n    />\n)\n\nconst mapStateToProps = state => ({\n    auth : state.auth\n})\n\nPrivateRoute.propTypes = {\n    auth : PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { R_Login, R_MAIN_TEST } from '../actions/constants';\nconst TestPrivateRoute = ({component : Component,auth, ...rest}) => (\n    <Route \n    {...rest}\n    render = {(props) => \n\n      \n        {\n          \n\n\n          if(auth.isAuthenticated){\n\n            \n            return <Component {...props}/>\n          } \n          else {\n            \n            return <Redirect to={R_Login}/>\n          }\n        }\n      } />)\n\nconst mapStateToProps = state => ({\n    auth : state.auth\n})\n\nTestPrivateRoute.propTypes = {\n    auth : PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(TestPrivateRoute)","import React, {Component} from 'react'\nimport classnames from 'classnames'\n\nclass TextInputGroup extends Component {\n\n    render(){\n        const { name , label , value , placeholder, type , onChange, error } = this.props\n        \n        return (\n            <div>\n                {/* <label htmlFor={name}>{label}</label> */}\n                <input className={\n                    classnames('bg-white focus:outline-none focus:shadow-outline py-1 px-4 block w-full appearance-none leading-normal rounded  text-lg shadow '\n                    ,{ 'text-field-error border-red-400' : error })}\n                    type={type}\n                    placeholder={placeholder}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                          />\n                {\n                    error ? \n                    (<div className=\"text-left text-red-400 mt-1 text-xs italic\">{error}</div>) :\n                    null\n                }\n                \n            </div>\n        )\n    }\n\n}\n\nexport default TextInputGroup","import React, {\n  Component\n} from 'react'\nimport { Link } from 'react-router-dom'\nimport app_img from '../app_img.jpg';\n\n\n\nimport { initLogin  } from '../actions/authActions'\n\nimport { R_Register } from '../actions/constants'\nimport TextInputgroup from '../base/TextInputGroup'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\nclass Login extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {isToggleOn: true, \n      email : '',\n      password : '',\n      errors : {}\n    };\n  }\n\n\n  componentDidMount(){\n    if(this.props.auth.isAuthenticated){\n      this.props.history.push('/')\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.auth.isAuthenticated){\n      this.props.history.push('/')\n    }\n    else {\n      this.checkForFailedMessage(nextProps)\n    }\n  }\n\n\n  initLogin = (e) => {\n    e.preventDefault()\n\n    \n    const {  email , password } = this.state\n    let errors = {}\n    \n   \n    if(email === ''){\n        errors.email = 'Email is required' \n        this.setState({ errors })\n        return\n    } \n    if(password === ''){\n        errors.password = 'Password is required' \n        this.setState({ errors })\n        return\n    }\n\n\n    const pro = { email , password }\n    this.props.initLogin(pro, 'nor');\n  }\n\n \n\n\n \n\n  onChange = e => {\n    this.setState({\n        [e.target.name] : e.target.value\n    })\n  }\n\n\n\n  checkForFailedMessage = (nextProps) => {\n\n    \n    const { failedMessage  } = nextProps.auth\n    \n    if(failedMessage){\n    let errors = {}\n   \n      if(failedMessage !== ''){\n          errors.password = failedMessage\n          this.setState({ errors })\n          return\n      }\n    }\n  }\n\n  render() {\n    const {  email , password, errors } = this.state\n    \n    return (\n\n      \n      <div className=\"w-full relative pt-12 mb-24\">\n        <div className=\"fixed overflow-hidden top-0 w-full h-screen flex flex-col overflow-y-auto items-center bg-gray-200\">\n                <div className=\"flex-1 flex flex-col justify-center text-center max-w-sm w-full px-8\">\n                \n                  <div className=\"w-24 content-center mx-auto\">\n                        <img src={app_img} className=\"rounded-full shadow-md border-2 border-white-500\"alt=\"asdasd\"/>\n                        <p className=\"text-black mt-1 text-2xl\">Evaluator</p>\n                  </div>\n  \n                  <div className=\"py-2 -mt-4 bg-gray-20 flex-col content-start justify-start\">\n\n                  <form onSubmit={this.initLogin}>\n\n                  <p className=\"text-gray-700 mt-2 text-left\">Email</p>\n                    <div className=\"mt-2\">\n\n                    <TextInputgroup\n                        name = \"email\" \n                        label = \"Email\"\n                        value = {email}\n                        placeholder = \"\"\n                        type = \"email\" \n                      onChange = {this.onChange}\n                      error = { errors.email }\n                      />\n                  </div>\n  \n                    <p className=\"text-gray-700 mt-2 text-left\">Password</p>\n                    <div className=\"mt-2\">\n                    <TextInputgroup\n                        name = \"password\" \n                        label = \"Password\"\n                        value = {password}\n                        placeholder = \"\"\n                        type = \"password\" \n                        onChange = {this.onChange}\n                        error = { errors.password }\n                      />\n                    </div>\n                    <div className=\"flex mt-4\">\n\n\n                    <input type=\"submit\" value=\"Login\"\n                      className=\"inline-block border-solid border border-white\n                      cursor-pointer\n                      mx-auto\n                      mt-4\n                      text-white px-8 py-3 uppercase tracking-wider \n                      text-xs font-semibold rounded-lg shadow-md \n                      w-full\n                      hover:bg-white hover:text-black\n                      bg-indigo-500\n                      text-center\n                      search-btn-text\"\n                    />\n\n\n\n                    </div>\n                  </form>\n                    <div className=\"flex mt-1\">\n\n                    <Link className=\"\n                    cursor-pointer\n                        inline-block border-solid border border-white\n                        mx-auto\n                        mt-4\n                        text-white px-8 py-3 uppercase tracking-wider \n                        text-xs font-semibold rounded-lg shadow-md \n                        w-full\n                        hover:bg-white hover:text-black\n                        bg-indigo-500\n                        text-center\n                        search-btn-text\n                        \"\n                        to={R_Register}\n                        >Register</Link>\n                    </div>\n  \n                  \n              </div>\n              </div>\n        </div>\n      </div>\n      )\n  }\n}\n\n\nLogin.propTypes = {\n  loginUser : PropTypes.func.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth,\n  errors : state.errors\n})\n\n\n\nexport default connect(mapStateToProps, { initLogin })(Login)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport app_img from '../app_img.jpg';\nimport { initRegister  } from '../actions/authActions'\nimport { Link } from 'react-router-dom'\nimport TextInputgroup from '../base/TextInputGroup'\nimport { R_Login } from '../actions/constants';\n\n class Register extends Component {\n  constructor(props){\n    super(props)\n    this.state = {isToggleOn: true, \n      email : '',\n      password : '',\n      c_password : '',\n      errors : {}\n    };\n  }\n\n\n  componentDidMount(){\n    if(this.props.auth.isAuthenticated){\n      this.props.history.push('/')\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.auth.isAuthenticated){\n      this.props.history.push('/')\n    }\n    else {\n      this.checkForFailedMessage(nextProps)\n    }\n  }\n\n\n  initLogin = (e) => {\n    e.preventDefault()\n\n    \n    const {  email , password, c_password } = this.state\n    let errors = {}\n    \n   \n    if(email === ''){\n        errors.email = 'Email is required' \n        this.setState({ errors })\n        return\n    } \n    if(password === ''){\n        errors.password = 'Password is required' \n        this.setState({ errors })\n        return\n    }\n\n    if(c_password === ''){\n      errors.c_password = 'Confirm Password is required' \n      this.setState({ errors })\n      return\n  }\n\n\n    const pro = { email , password }\n    pro.userType = 'nor'\n    this.props.initRegister(pro, this.props.history);\n  }\n\n \n\n\n \n\n  onChange = e => {\n    this.setState({\n        [e.target.name] : e.target.value\n    })\n  }\n\n\n\n  checkForFailedMessage = (nextProps) => {\n\n    \n    const { failedMessage  } = nextProps.auth\n    \n    if(failedMessage){\n    let errors = {}\n   \n      if(failedMessage !== ''){\n          errors.password = failedMessage\n          this.setState({ errors })\n          return\n      }\n    }\n  }\n\n  render() {\n    const {  email , password, errors, c_password } = this.state\n    \n    return (\n\n      \n      <div className=\"w-full relative pt-12 mb-24\">\n        <div className=\"fixed overflow-hidden top-0 w-full h-screen flex flex-col overflow-y-auto items-center bg-gray-200\">\n                <div className=\"flex-1 flex flex-col justify-center text-center max-w-sm w-full px-8\">\n                \n                  <div className=\"w-24 content-center mx-auto\">\n                        <img src={app_img} className=\"rounded-full shadow-md border-2 border-white-500\"alt=\"asdasd\"/>\n                        <p className=\"text-black mt-1 text-2xl\">Evaluator</p>\n                  </div>\n  \n                  <div className=\"py-2 -mt-4 bg-gray-20 flex-col content-start justify-start\">\n\n                  <form onSubmit={this.initLogin}>\n\n                  <p className=\"text-gray-700 mt-2 text-left\">Email</p>\n                    <div className=\"mt-2\">\n\n                    <TextInputgroup\n                        name = \"email\" \n                        label = \"Email\"\n                        value = {email}\n                        placeholder = \"\"\n                        type = \"email\" \n                      onChange = {this.onChange}\n                      error = { errors.email }\n                      />\n                  </div>\n  \n                    <p className=\"text-gray-700 mt-2 text-left\">Password</p>\n                    <div className=\"mt-2\">\n                    <TextInputgroup\n                        name = \"password\" \n                        label = \"Password\"\n                        value = {password}\n                        placeholder = \"\"\n                        type = \"password\" \n                        onChange = {this.onChange}\n                        error = { errors.password }\n                      />\n                    </div>\n\n\n                    <p className=\"text-gray-700 mt-2 text-left\">Confirm Password</p>\n                    <div className=\"mt-2\">\n\n                    <TextInputgroup\n                        name = \"c_password\" \n                        label = \"Confirm Password\"\n                        value = {c_password}\n                        placeholder = \"\"\n                        type = \"password\" \n                      onChange = {this.onChange}\n                      error = { errors.c_password }\n                      />\n                  </div>\n\n                    <div className=\"flex mt-4\">\n\n\n                    <input type=\"submit\" value=\"Register\"\n                      className=\"inline-block border-solid border border-white\n                      cursor-pointer\n                      mx-auto\n                      mt-4\n                      text-white px-8 py-3 uppercase tracking-wider \n                      text-xs font-semibold rounded-lg shadow-md \n                      w-full\n                      hover:bg-white hover:text-black\n                      bg-indigo-500\n                      text-center\n                      search-btn-text\"\n                    />\n\n\n\n                    </div>\n                  </form>\n                    <div className=\"flex mt-1\">\n\n                    <Link className=\"\n                    cursor-pointer\n                        inline-block border-solid border border-white\n                        mx-auto\n                        mt-4\n                        text-white px-8 py-3 uppercase tracking-wider \n                        text-xs font-semibold rounded-lg shadow-md \n                        w-full\n                        hover:bg-white hover:text-black\n                        bg-indigo-500\n                        text-center\n                        search-btn-text\n                        \"\n                        to={R_Login}\n                    \n                        >Back to Login</Link>\n                    </div>\n  \n                  \n              </div>\n              </div>\n        </div>\n      </div>\n      )\n  }\n}\n\n\nRegister.propTypes = {\n  loginUser : PropTypes.func.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth,\n  errors : state.errors\n})\n\n\n\nexport default connect(mapStateToProps, { initRegister })(Register)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { R_MAIN_TEST } from '../actions/constants'\nimport TextInputgroup from '../base/TextInputGroup'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { creatQuizSession  } from '../actions/authActions'\n\nclass UserHomePage extends Component {\n\n\n\n  static getDerivedStateFromProps(nextProps, prevState){\n    \n    let { isQuizTokenPresent} = nextProps.auth\n    if(isQuizTokenPresent){\n      nextProps.history.push(R_MAIN_TEST)\n    }\n    else return null;\n  }\n\n\n  \n\n  onStartClick = () => {\n    const { history , creatQuizSession } = this.props\n    creatQuizSession(history)\n  }\n\n  render() {\n    return (\n      <div className=\"pt-20 h-full bg-gray-200\">\n        <p className=\"text-center text-2xl\">\n          Marking Scheme\n        </p>\n        <ol className=\"mx-20 mt-8 max-w-sm md:max-w-lg mx-auto md:text-xl md:text-sm md:text-left\" style={{ listStyleType: \"decimal\" }}>\n          <li>For every correct answer, 1 marks will be given.</li> \n          <li>For every incorrect answer, 0 marks will be deducted.</li> \n          <li>No marks will be given for the unattempted questions.</li> \n        </ol>\n\n\n\n\n\n      <div className=\"mt-8 max-w-md md:max-w-xl mx-auto md:text-xl md:text-sm md:text-left\">\n          <div className=\"flex\">\n\n            <div \n                className={`cursor-pointer max-w-xs rounded-full mr-4 w-16 align-top my-2 shadow-md bg-white text-gray-700 block`}\n                >\n               <div className=\"px-6 py-4\">\n                 <p className=\"text-base whitespace-pre-wrap text-center\">\n                  {1}\n                 </p>\n                 \n               </div>\n              </div>\n              <p className=\"self-center\">Not Answered</p>\n          </div>\n  \n            <div className=\"flex\">\n              <div \n                className={`cursor-pointer max-w-xs rounded-full mr-4 w-16 align-top my-2 shadow-md bg-indigo-500 text-white`}\n                >\n               <div className=\"px-6 py-4\">\n                 <p className=\"text-base whitespace-pre-wrap text-center\">\n                  {1}\n                 </p>\n                 \n               </div>\n              </div>\n              <p className=\"self-center\">Current Question</p>\n            </div>\n  \n            <div className=\"flex align-middle\">\n              <div \n                className={`cursor-pointer max-w-xs rounded-full mr-4 w-16 align-top my-2 shadow-md bg-white text-gray-700 border-indigo-500 border-2`}\n                >\n               <div className=\"px-6 py-4\">\n                 <p className=\"text-base whitespace-pre-wrap text-center\">\n                  {1}\n                 </p>\n                 \n               </div>\n              </div>\n              <p className=\"self-center\">Answered Question</p>\n            </div>\n\n      </div> \n       \n        <button\n        className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\n          mt-8\n         self-center block mx-auto shadow w-24 text-center\"\n         onClick={this.onStartClick}\n         >\n          Start\n        </button>\n        \n      </div>\n    )\n  }\n}\n\n\nUserHomePage.propTypes = {\n  loginUser : PropTypes.func.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth,\n  errors : state.errors\n})\n\n\n\nexport default connect(mapStateToProps, { creatQuizSession })(UserHomePage)\n\n\n\n","import { GET_QUESTIONS, FAILED } from './constants'\nimport axios from 'axios'\nimport questionData from '../test.json'\nimport { TOKEN, ON_QUIZ_SUBMIT } from '../actions/constants';\n\n\nexport const getAllQuestions = () => async dispatch => {\n    //dispatch({ type : LOADING })\n    const req_d = {}\n    req_d.token = localStorage.getItem(TOKEN)\n    const res = await axios.post('/api/quiz/getAllQuestions', req_d)\n\n    const res_d = res.data\n    //const res_d = questionData \n\n    \n\n    if(res_d.Status){\n        const action = {type : GET_QUESTIONS ,payload : res_d.questions}\n        dispatch(action)\n        \n    }else {\n        const action = {type : FAILED ,payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\nexport const sumbitResult = (testContent, quizToken) => async dispatch => {\n    \n\n    const req_d = {questions : testContent,quizToken}\n    req_d.token = localStorage.getItem(TOKEN)\n    const res = await axios.post('/api/quiz/summitScore', req_d)\n\n    const res_d = res.data\n\n    if(res_d.Status){\n        const action = {type : ON_QUIZ_SUBMIT ,payload : res_d}\n        dispatch(action)\n        \n    }else {\n        const action = {type : FAILED ,payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { R_USER_HOME } from '../actions/constants'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getAllQuestions } from '../actions/questionActions'\nimport { onClose } from '../actions/authActions'\n\n\n\n\n\nclass FinalSubmission extends Component {\n\n\n  componentDidMount(){\n    \n    if(!this.props.auth.isQuizTokenPresent){\n      this.props.history.push(R_USER_HOME)\n    }else {\n      this.props.getAllQuestions()\n    }\n    \n  }\n\n\n  onClose = () => {\n    this.props.onClose()\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(!nextProps.auth.isQuizTokenPresent){\n      this.props.history.push(R_USER_HOME)\n    }\n  }\n  render() {\n    return (\n      <div className=\"pt-20 h-full bg-gray-200\">\n        \n        <div className=\"mx-20 mt-8 max-w-sm md:max-w-lg mx-auto md:text-xl md:text-sm md:text-left \">\n        \n          <i className=\"fa fa-check-circle  text-center w-full text-green-400 text-6xl\" />\n          <p className=\"text-center text-2xl \">\n            Finised\n          </p>\n    <p className=\"text-center mt-8\">You scored {this.props.auth.score}</p>\n        </div>\n     \n       \n        <button\n        className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\n          mt-8\n         self-center block mx-auto shadow w-24 text-center\"\n         onClick={this.onClose}\n         >\n          Close\n        </button>\n        \n      </div>\n    )\n  }\n}\n\n\nFinalSubmission.propTypes = {\n  questions : PropTypes.array.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n  questions : state.questions,\n  auth : state.auth,\n  errors : state.errors\n  \n})\nexport default connect(mapStateToProps, { getAllQuestions, onClose })(FinalSubmission)\n\n\n","import React, { Component } from 'react'\n\n class TestCheckBox extends Component {\n  render() {\n    const {optionContent} = this.props\n    return (\n      <label>\n        <div className=\"flex\">\n        <input\n          type=\"checkbox\"\n          className=\"mt-1\"\n          checked={this.props.isChecked}\n          onChange={() => this.props.toggleChange(this.props.index) } />\n          <div className=\"display-none ml-2 mb-2\">{optionContent}</div> \n        </div>\n    </label>\n    )\n  }\n}\n\n\nexport default TestCheckBox","import React, { Component } from 'react'\nimport classnames from 'classnames'\n\nclass QuestionNavigator extends Component {\n\n\n  state = {\n    testContentCount : 0,\n    defaultQIndex : 0,\n    testContent : []\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState){\n    let { testContentCount , defaultQIndex } = nextProps\n    if(testContentCount!== prevState.testContentCount){\n      return { testContentCount , defaultQIndex };\n     }\n     else return null;\n }\n\n\n \n  \n\n  render() {\n    const { testContentCount, defaultQIndex , onJumpToAnotherQuestion, testContent} = this.props\n\n    \n    let m_t = []\n\n\n    m_t = testContent.map((_testObj) => {\n      let i = testContent.indexOf(_testObj)\n      let _itemSelectedcolor = \"bg-white text-gray-700\"\n      if(defaultQIndex === i){\n        _itemSelectedcolor = \"bg-indigo-500 text-white\"\n      }else if(_testObj.answered !== -1){\n        _itemSelectedcolor = \"bg-white text-gray-700 border-indigo-500 border-2\"\n      }\n      \n      return (\n        <div \n        className={`cursor-pointer max-w-xs rounded-full mr-4 inline-block align-top my-2 shadow-md ${_itemSelectedcolor}`}\n        onClick={() => onJumpToAnotherQuestion(i)}\n        >\n           <div className=\"px-6 py-4\">\n             <p className=\"text-base whitespace-pre-wrap\">\n              {i + 1}\n             </p>\n           </div>\n        </div>)\n    })\n\n   \n    return (\n      <div>\n        <div className=\"w-full min-w-full hor-list pb-8 overflow-x-auto whitespace-no-wrap mt-2\">    \n          {m_t}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuestionNavigator\n","import React, { Component } from 'react'\n\nclass QuestionTimer extends Component {\n  constructor(props) {\n    super(props);\n    const {seconds} = this.props\n    this.state = { time: {}, seconds };\n    this.timer = 0;\n    \n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs){\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n    this.startTimer();\n  }\n\n  startTimer = () => {\n    const { onTimerOver } = this.props\n    if (this.timer === 0 && this.state.seconds > 0) {\n      this.timer = setInterval(() => {\n        this.countDown(onTimerOver)\n      }\n      \n      , 1000);\n    }\n    \n  }\n\n  countDown(onTimerOver) {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    });\n    \n    // Check if we're at zero.\n    if (seconds === 0) { \n      clearInterval(this.timer);\n      onTimerOver()\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"relative text-gray-900\" >\n        <div className=\"w-24 mx-auto text-center\">\n          <div className=\"text-3xl\">\n            {this.state.time.m} : {this.state.time.s}\n          </div>\n         <p>Time left</p>\n        </div>\n        <button\n        className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\n          mt-4\n         self-center block mx-auto shadow w-32 text-center absolute right-0 top-0 text-sm\"\n         onClick={this.props.onTimerOver}\n         >\n\n          Submit Test\n        </button>\n      </div>\n      \n\n      \n\n    );\n  }\n\n}\n\nexport default QuestionTimer\n","import React, { Component } from 'react'\n\nclass QuestionBottomNav extends Component {\n\n\n\n  render() {\n\n    const { onPreviousClicked , onNextClicked, defaultQIndex, testContentCount} = this.props\n\n  \n\n    return (\n      <div className=\"flex justify-between mt-10\">\n\n        <div \n        className=\"cursor-pointer max-w-xs rounded-full shadow mr-4 bg-white inline-block align-top my-2\"\n        onClick={onPreviousClicked}\n        >\n          <div className=\"px-6 py-4\">\n            <p className=\"text-gray-700 text-base whitespace-pre-wrap\">\n              <i className=\"fa fa-arrow-left\" />\n            </p>\n          </div>\n        </div>\n\n        <div className=\"max-w-xs rounded-full shadow mr-4 bg-white inline-block align-top my-2\">\n          <div className=\"px-6 py-4\">\n            <p className=\"text-gray-700 text-base whitespace-pre-wrap\">\n              {defaultQIndex+1}/{testContentCount}\n            </p>\n          </div>\n        </div>\n\n\n        <div \n        className=\"cursor-pointer max-w-xs rounded-full shadow mr-4 bg-white inline-block align-top my-2\"\n        onClick={onNextClicked}\n        >\n            <div className=\"px-6 py-4\">\n              <p className=\"text-gray-700 text-base whitespace-pre-wrap\">\n              <i className=\"fa fa-arrow-right\" />\n              </p>\n            </div>\n          </div>\n      </div>\n\n    )\n  }\n}\n\n\nexport default QuestionBottomNav\n","import React, { Component } from 'react'\nimport TestCheckBox from './TestCheckBox'\nimport QuestionNavigator from './QuestionNavigator'\nimport QuestionTimer from './QuestionTimer'\nimport QuestionBottomNav from './QuestionBottomNav'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getAllQuestions , sumbitResult} from '../actions/questionActions'\nimport {R_USER_HOME, R_SCORE_PAGE} from '../actions/constants'\n\n\n\n\n//import {withRouter} from 'react-router';\n\nclass UserTest extends Component {\n\n  state = {\n    value : 1,\n    defaultQIndex : 0,\n    testContent : []\n  }\n\n  toggleChange = (index) => {\n    let { testContent, defaultQIndex } = this.state\n    testContent[defaultQIndex].answered = index\n    this.setState({\n      value : index,\n      testContent \n    })\n  }\n\n\n  componentDidMount(){\n    \n    if(!this.props.auth.isQuizTokenPresent){\n      this.props.history.push(R_USER_HOME)\n    }else {\n\n      if(this.props.questions.testContent.length === 0){\n        this.props.getAllQuestions()\n      }\n      \n    }\n    \n  }\n\n  componentWillReceiveProps(nextProps){\n    if(!nextProps.auth.isQuizTokenPresent){\n      this.props.history.push(R_USER_HOME)\n    }\n    else {\n    const { score } = nextProps.auth\n     if(score !== ''){\n       nextProps.history.push(R_SCORE_PAGE)\n     }\n      //this.checkForFailedMessage(nextProps)\n    }\n  }\n\n  // componentWillMount(){\n  //   window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n  // }\n\n\n\n\n  // componentDidMount() {\n  //   window.addEventListener('popstate', (event) => {\n  //     if (event.state) {\n  //       console.log('ashdjashdkjsah BACK');\n  //     }\n  //    }, false);\n  //   window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n  // }\n\n\n  // routerWillLeave(nextState) { // return false to block navigation, true to allow\n  //   if (nextState.action === 'POP') {\n  //     // handle \"Back\" button clicks here\n  //   }\n  // }\n\n\n\n  \n\n  \n\n  static getDerivedStateFromProps(nextProps, prevState){\n    let { testContent } = nextProps.questions\n    if(testContent!== prevState.testContent){\n      return { testContent};\n     }\n\n\n     const { score } = nextProps.auth\n     if(score !== ''){\n       nextProps.history.push(R_SCORE_PAGE)\n     }\n\n     else return null;\n }\n\n\n\n  onTimerOver = () => {\n    const { testContent } = this.state\n    const { quizToken } = this.props.auth\n\n    console.log('timeOver')\n    \n    this.props.sumbitResult( testContent, quizToken)\n  }\n\n  \n\n  render() {\n    const { value, testContent, defaultQIndex } = this.state\n\n    let quesTemp = {}\n    if(testContent.length > 0){\n      quesTemp = testContent[defaultQIndex]\n    }\n\n    let options = []\n\n    console.log('testContent[defaultQIndex] :', testContent);\n    console.log('defaultQIndex :', defaultQIndex);\n\n\n    if(quesTemp){\n      if(Object.keys(quesTemp).length > 0){\n        options = quesTemp.options.map((_opt)=> {\n          let isChecked\n          const _k = quesTemp.options.indexOf(_opt)\n          if(quesTemp.answered === -1){\n            isChecked = false\n          }else {\n            isChecked = quesTemp.answered === _k\n          }\n          return (<TestCheckBox key={_k} isChecked={isChecked} index={_k} toggleChange={this.toggleChange} optionContent={_opt}/>)\n        })\n      }\n    }\n    \n    // for(let i = 0 ; i < 4 ; i++){\n    //   options.push()\n    // }\n\n    \n    return testContent ? (\n      <div className=\"bg-gray-200 h-full\">\n        <div className=\"lg:max-w-4xl md:max-w-2xl max-w-md block mx-auto mx-16\">\n          \n          <QuestionTimer \n          onTimerOver={this.onTimerOver} \n          seconds={this.props.auth.timer} \n          />\n          \n          <QuestionNavigator \n          testContentCount={testContent.length} \n          defaultQIndex={defaultQIndex} \n          testContent={testContent}\n          onJumpToAnotherQuestion={this.onJumpToAnotherQuestion}\n          />\n          \n          {quesTemp ? \n          (<div className=\"bg-white rounded p-2 mt-12 shadow-md\">\n            <p className=\"mb-8 p-2 text-lg\">\n            <span>Q{defaultQIndex+1}.</span>&nbsp;&nbsp;&nbsp;&nbsp; {quesTemp.question}\n            </p>\t\n            {options}\n          </div>) : null}\n          \n\n          <QuestionBottomNav \n          testContentCount={testContent.length} \n          defaultQIndex={defaultQIndex} \n          onNextClicked={this.onNextClicked}\n          onPreviousClicked={this.onPreviousClicked}\n          />\n        </div>\n      </div>\n      \n    ) : null\n  }\n\n\n  onJumpToAnotherQuestion = (defaultQIndex) => {\n    this.setState({\n      defaultQIndex  \n    })\n  }\n\n\n  onPreviousClicked = () => {\n\n    let {defaultQIndex} = this.state\n    let count = 0\n\n    if(count === defaultQIndex){\n      return\n    }\n\n    defaultQIndex -= 1\n\n    this.setState({\n      defaultQIndex \n    })\n      \n  }\n\n\n  onNextClicked = () => {\n    let {defaultQIndex, testContent} = this.state\n    \n    let count = testContent.length\n\n\n    \n\n    if(count-1 === defaultQIndex){\n      return\n    }\n    defaultQIndex += 1\n\n    this.setState({\n      defaultQIndex \n    })\n  }\n  \n}\n\n\nUserTest.propTypes = {\n  questions : PropTypes.array.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n  questions : state.questions,\n  auth : state.auth,\n  errors : state.errors\n  \n})\nexport default connect(mapStateToProps, { getAllQuestions, sumbitResult })(UserTest)\n","import React, {Component} from 'react'\nimport Header from '../base/Header'\n\n\nimport { Route , Switch } from 'react-router-dom'\nimport NotFound from '../base/NotFound';\n\nimport {  R_Login, R_USER_HOME, R_MAIN_TEST, R_SCORE_PAGE, R_Register } from '../actions/constants';\nimport PrivateRoute from '../base/PrivateRoute';\nimport TestPrivateRoute from '../base/TestPrivateRoute';\n\n\n\nimport Login from '../menu/Login';\nimport Register from '../menu/Register';\nimport UserHomePage from '../home/UserHomePage'\nimport FinalSubmission from '../test_submission/FinalSubmission'\n\nimport UserTest from '../test_page/UserTest';\n\n\nclass Home extends Component {\n\n\n  state = {\n    isVisible : true\n  }\n\n  onError = () => {\n    this.setState({isVisible:false})\n  }\n  \n  render() {\n    const { match } = this.props\n    let isVisible = this.state\n\n    switch(this.props.location.pathname){\n      \n      case R_Login:\n      case R_USER_HOME:\n      case R_Register:\n          isVisible = true\n          break;\n      \n      case R_MAIN_TEST:   \n      default:\n          isVisible = false\n          break;\n    }\n\n\n    return ( \n    <div className=\"relative h-screen absolute\">\n              <Switch>\n                \n                <Route exact path={ R_Login } component={Login}/>\n                <Route exact path={ R_Register } component={Register}/>\n                <PrivateRoute exact path={ match.url } component={UserHomePage}/>\n                <TestPrivateRoute  path={ R_MAIN_TEST } component={UserTest}/>\n                <TestPrivateRoute  path={R_SCORE_PAGE} component={FinalSubmission} />\n                \n                <Route \n                render={(props) =>  <NotFound {...props} data='web' onError={this.onError}/>} />\n              </Switch>\n\n              {isVisible ?  <Header/> : null}\n              {/* {isVisible ?  <Footer/> : null} */}\n\n          </div>\n    )\n  }\n}\n\n\n\n\nexport default Home\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport app_img from '../../app_img.jpg';\nimport { initLogout } from '../../actions/authActions'\n\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { ADMIN } from '../../actions/constants';\n\n\nclass TopBar extends Component {\n\n\n  onLogout = () => {\n    this.props.initLogout(ADMIN)\n  }\n\n  render() {\n    return (\n      <nav className=\"bg-gray-900 pt-2 md:pt-1 pb-1 px-1 mt-0 h-auto fixed w-full z-20 top-0\">\n        <div className=\"flex flex-wrap items-center\">\n          <div className=\"flex flex-shrink md:w-1/3 justify-center md:justify-start text-white\">\n            <Link to=\"\">\n            <div className=\"flex justify-center\">\n              <img src={app_img} className=\"rounded-full shadow-md border-2 border-white-500 w-10 h-10 self-center mx-2\"alt=\"asdasd\"/>\n              <p className=\"text-white text-md text-center self-center\">Test Admin</p>\n            </div>\n            </Link>\n          </div>\n          <div className=\"flex flex-1 md:w-1/3 justify-center md:justify-start text-white px-2\">\n          \n          </div>\n          <div className=\"flex w-full py-2 content-center justify-between md:w-1/3 md:justify-end\">\n            <ul className=\"list-reset flex justify-between flex-1 md:flex-none items-center\">\n              <li className=\"flex-1 md:flex-none md:mr-3\">\n                <button\n                className=\"inline-block py-2 px-4 text-white no-underline\"\n                onClick={this.onLogout}\n                >Logout</button>\n              </li>\n             \n              <li className=\"flex-1 md:flex-none md:mr-3\">\n                <div className=\"relative inline-block\">\n                  {/* <button  className=\"drop-button text-white focus:outline-none\"> <span className=\"pr-2\"><i className=\"em em-robot_face\" /></span> Hi, User <svg className=\"h-3 fill-current inline\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg></button> */}\n                  <div id=\"myDropdown\" className=\"dropdownlist absolute bg-gray-900 text-white right-0 mt-3 p-3 overflow-auto z-30 invisible\">\n                    <input type=\"text\" className=\"drop-search p-2 text-gray-600\" placeholder=\"Search..\" id=\"myInput\" />\n                    <Link to=\"\" className=\"p-2 hover:bg-gray-800 text-white text-sm no-underline hover:no-underline block\"><i className=\"fa fa-user fa-fw\" /> Profile</Link>\n                    <Link to=\"\" className=\"p-2 hover:bg-gray-800 text-white text-sm no-underline hover:no-underline block\"><i className=\"fa fa-cog fa-fw\" /> Settings</Link>\n                    <div className=\"border border-gray-800\" />\n                    <Link to=\"\" className=\"p-2 hover:bg-gray-800 text-white text-sm no-underline hover:no-underline block\"><i className=\"fas fa-sign-out-alt fa-fw\" /> Log Out</Link>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  auth : state.auth\n})\n\nTopBar.propTypes = {\n  auth : PropTypes.object.isRequired\n}\n\n\nexport default connect(mapStateToProps,{initLogout})(TopBar)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n   R_Quiz_Results\n} from '../../actions/constants';\n\n\nexport default class AdminNavSide extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"bg-gray-900 shadow-lg h-16 fixed bottom-0 mt-12 md:relative md:h-screen z-10 w-full md:w-48\">\n          <div className=\"md:mt-12 md:w-48 md:fixed md:left-0 md:top-0 content-center md:content-start text-left justify-between\">\n            <ul className=\"list-reset flex flex-row md:flex-col py-0 md:py-3 px-1 md:px-2 text-center md:text-left\">\n              <li className=\"mr-3 flex-1\">\n                <Link to={R_Quiz_Results} className=\"block py-1 md:py-3 pl-1 align-middle text-white no-underline hover:text-white border-b-2 border-gray-800 hover:border-pink-500\">\n                  <i className=\"fa fa-tasks pr-0 md:pr-3\" /><span className=\"pb-1 md:pb-0 text-xs md:text-base text-gray-600 md:text-gray-400 block md:inline-block\">Quiz Results</span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class BreadCrum extends Component {\n  render() {\n    \n    return (\n      <div className=\"bg-indigo-700 p-2 shadow text-xl text-white mt-12 fixed w-full z-20\">\n        <h3 className=\"font-bold pl-2\">{this.props.name}</h3>\n      </div>  \n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport app_img from '../app_img.jpg';\nimport TextInputgroup from '../base/TextInputGroup'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { initLogin } from '../actions/authActions'\nimport { R_Quiz_Results } from '../actions/constants'\n\n\nclass AdminLogin extends Component {\n\n\n  state = {\n    isToggleOn: true, \n    email : '',\n    password : '',\n    errors : {}\n  };\n\n\n  onChange = e => {\n    this.setState({\n        [e.target.name] : e.target.value\n    })\n  }\n\n\n  componentDidMount(){\n    if(this.props.auth.isAdminAuthenticated){\n      this.props.history.push(R_Quiz_Results)\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    console.log('nextProps :', nextProps);\n    if(nextProps.auth.isAdminAuthenticated){\n      this.props.history.push(R_Quiz_Results)\n    }\n    else {\n      this.checkForFailedMessage(nextProps)\n    }\n  }\n\n\n  checkForFailedMessage = (nextProps) => {\n\n    \n    const { failedMessage  } = nextProps.auth\n    \n    if(failedMessage){\n    let errors = {}\n   \n      if(failedMessage !== ''){\n          errors.password = failedMessage\n          this.setState({ errors })\n          return\n      }\n    }\n  }\n\n  initLogin = (e) => {\n    e.preventDefault()\n\n    \n    const {  email , password } = this.state\n    let errors = {}\n    \n   \n    if(email === ''){\n        errors.email = 'Email is required' \n        this.setState({ errors })\n        return\n    } \n    if(password === ''){\n        errors.password = 'Password is required' \n        this.setState({ errors })\n        return\n    }\n\n\n    const pro = { email , password }\n    this.props.initLogin(pro, 'admin');\n  }\n\n\n  render() {\n\n    const {  email , password, errors } = this.state\n    return (\n      <div className=\"w-full h-screen flex justify-center flex-col bg-gray-900\">\n\n      <div className=\"w-24 content-center mx-auto admin-form-width flex-col flex justify-center\">\n        <img src={app_img} className=\"rounded-full shadow-md border-2 border-white-500 w-24 h-24 self-center mb-4\"alt=\"asdasd\"/>\n        <p className=\"text-gray-500 mt-1 text-md text-center my-8\">Test Admin</p>\n      </div>\n\n      <form \n      onSubmit={this.initLogin}\n      className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 self-center admin-form-width\" >\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n            Username\n          </label>\n          <TextInputgroup\n              name = \"email\" \n              label = \"Email\"\n              value = {email}\n              placeholder = \"\"\n              type = \"email\" \n            onChange = {this.onChange}\n            error = { errors.email }\n            />\n        </div>\n        <div className=\"mb-6\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n            Password\n          </label>\n          <TextInputgroup\n            name = \"password\" \n            label = \"Password\"\n            value = {password}\n            placeholder = \"\"\n            type = \"password\" \n            onChange = {this.onChange}\n            error = { errors.password }\n          />\n        </div>\n        <div className=\"flex items-center justify-between\">\n\n        <input type=\"submit\" value=\"Login\"\n            className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    />\n\n          \n          {/* <Link className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" >\n            Forgot Password?\n          </Link> */}\n        </div>\n      </form>\n      \n    </div>\n    )\n  }\n}\n\n\nAdminLogin.propTypes = {\n  loginUser : PropTypes.func.isRequired,\n  auth : PropTypes.object.isRequired,\n  errors : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth,\n  errors : state.errors\n})\n\n\n\nexport default connect(mapStateToProps, { initLogin })(AdminLogin)\n\n\n","import React, { Component } from 'react'\nimport { getAllQuizeResults } from '../actions/quizActions'\n\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\nclass AllQuizResults extends Component {\n\n\n  state = {\n    all_results : []\n  }\n\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0)\n    this.props.getAllQuizeResults();\n  }\n\n\n  static getDerivedStateFromProps(nextProps, prevState){\n\n    console.log('nextProps :', nextProps);\n    let { all_results } = nextProps.quizResults\n\n    if(all_results!==prevState.all_results){\n      return { all_results};\n     }\n     else return null;\n }\n\n\n\n  render() {\n\n    let { all_results } = this.state\n\n    console.log('all_results :', all_results);\n    \n    let _td = []\n    \n    _td = all_results.map((_a) => {\n      \n      \n      return (\n        <tr className=\"hover:bg-gray-100\" key={_a.id}>\n              \n              <td className=\"py-4 px-6 border-b\">{_a.name}</td>\n                <td className=\"py-4 px-6 border-b\">{_a.email}</td>\n                <td className=\"py-4 px-6 border-b\">\n                  {_a.score}\n                </td>\n        </tr>\n      )\n    })\n\n    return (\n      <div className=\"bg-white shadow-md rounded my-6\">\n          <table className=\"text-left w-full border-collapse\"> \n            <thead>\n              <tr>\n                <th className=\"w-20 py-4 px-6 bg-gray-300 font-bold uppercase text-sm text-grey-dark border-b\">Name</th>\n                <th className=\"py-4 px-6 bg-gray-300 font-bold uppercase text-sm text-grey-dark border-b\">Email</th>\n                <th className=\"w-56 py-4 px-6 bg-gray-300 font-bold uppercase text-sm text-grey-dark border-b\">Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {_td}\n            </tbody>\n          </table>  \n        </div>\n    )\n  }\n}\n\n\nAllQuizResults.propTypes = {\n  quizResults : PropTypes.object.isRequired,\n}\n\n\nconst mapStateToProps = (state) => ({\n  quizResults : state.quizResults,\n  \n})\n\n\nexport default connect(mapStateToProps, { getAllQuizeResults })(AllQuizResults)\n","import {  FAILED, ADMIN_TOKEN, GET_ALL_RESULTS} from './constants'\nimport axios from 'axios'\n\n\n\nexport const getAllQuizeResults = () => async dispatch => {\n    //dispatch({ type : LOADING })\n    const req_d = {}\n    req_d.token = localStorage.getItem(ADMIN_TOKEN)\n    \n    const res = await axios.post('/api/quiz/getAllResults', req_d)\n\n    const res_d = res.data\n\n    if(res_d.Status){\n        console.log('res_d :', res_d.quizResList);        \n        const action = {type : GET_ALL_RESULTS,payload : res_d.quizResList}\n        dispatch(action)\n        \n    }else {\n        const action = {type : FAILED ,payload : res_d.Message}\n        dispatch(action)\n    }\n\n    \n}\n\n\n\n\n\n\n\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { R_Admin } from '../actions/constants';\n\n\nconst AdminPrivate = ({component : Component,auth, ...rest}) => (\n    <Route \n    {...rest}\n    render = {props => \n        auth.isAdminAuthenticated === true ? \n        (<Component {...props}/>) \n        : \n        (<Redirect to={R_Admin}/>)}\n    />\n)\n\nconst mapStateToProps = state => ({\n    auth : state.auth\n})\n\nAdminPrivate.propTypes = {\n    auth : PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(AdminPrivate)","import React, {\n  Component\n} from 'react'\n\n\nimport TopBar from './common/TopBar';\nimport AdminNavSide from './common/AdminNavSide';\nimport BreadCrum from './common/BreadCrum';\nimport AdminLogin from './AdminLogin';\nimport AllQuizResults from './AllQuizResults';\nimport classnames from 'classnames'\nimport NotFound from '../base/NotFound'\nimport AdminPrivate from '../base/AdminPrivate';\n\nimport {\n     R_Admin, R_Quiz_Results\n} from '../actions/constants';\n\nimport { Route , Switch } from 'react-router-dom'\n\n\nclass AdminMain extends Component {\n\n\n  state = {\n    isVisible : true\n  }\n\n  onError = () => {\n    this.setState({isVisible:false})\n  }\n\n  render() {\n    let isVisible = this.state\n    switch(this.props.location.pathname){\n      case R_Quiz_Results:\n          isVisible = true\n          break;\n      case R_Admin:\n      default:\n          isVisible = false\n          break;\n    }\n\n    return (\n      <div>\n\n        {isVisible ? <TopBar/> : null}\n        <div className={classnames('', {'flex flex-col md:flex-row bg-gray-900' : isVisible})}>\n        {isVisible ? <AdminNavSide/> : null}\n        <div \n        className={classnames('', {'main-content flex-1 bg-gray-100 mt-12 md:mt-2 pb-24 md:pb-5' : isVisible})}>\n        {isVisible ? <BreadCrum name={'Articles'}/> : null}\n          <div className={classnames('', {'w-full px-6 mt-32' : isVisible})}>\n            <Switch>\n              <Route exact path={R_Admin} component={AdminLogin} />\n              \n              <AdminPrivate exact path={R_Quiz_Results} component={AllQuizResults}/>\n              \n              <Route \n                render={(props) =>  <NotFound {...props} data='admin' onError={this.onError}/>}/>\n            </Switch>\n          </div>\n          \n        </div>\n        </div>\n      </div>          \n\n      \n    );\n  }\n}\n\n\nexport default AdminMain","import React,{ Component, Fragment } from 'react';\nimport Home from './home/Home';\nimport {withRouter} from 'react-router-dom';\nimport { R_Admin, R_USER_HOME  } from './actions/constants';\nimport {  Route  } from 'react-router-dom'\nimport './App.css';\nimport AdminMain from './admin/AdminMain';\n\nclass RHome extends Component {\n  render(){\n    const { pathname } = this.props.location\n    const isP = !pathname.includes(R_Admin)\n    return (\n      <Fragment>\n        { isP ? \n        <Route path={R_USER_HOME} component={Home} />\n        :\n        <Route path={R_Admin} component={AdminMain} />\n      }\n      </Fragment>\n      \n    );\n  }\n}\n\nexport default withRouter(RHome);\n","// this is just one of the reducers\n\nimport { LOADING, SET_TOKEN, PROFILE_FAILED} from '../actions/constants' \nconst initailState = {\n }\n// on calling this.props.getProfiles() this method get called for GET_PROFILES\n\n export default function(state = initailState , action){\n    switch(action.type){\n        case PROFILE_FAILED:\n        return {\n            ...state,\n            failedMessage : action.payload,\n        }\n        default : \n            return state\n    }\n }\n","import { SET_TOKEN , AUTH_FAILED , SET_ADMIN_TOKEN, CREATE_QUIZ_SESSION, ON_QUIZ_SUBMIT, DISPOSE_QUIZ_SUBMIT, ON_TIMER_CHANGE} from '../actions/constants'\n\n\n\nconst initialState = {\n    isAuthenticated : false,\n    isAdminAuthenticated : false,\n    isQuizTokenPresent : false,\n    token : '',\n    adminToken : '',\n    quizToken : '',\n    failedMessage: '',\n    score : '',\n    timer : 600\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case SET_TOKEN:\n        let { token } = action.payload    \n        let isAuthenticated = false\n        if(token){\n            isAuthenticated = true\n        }else {\n            token = ''\n        }\n\n        \n        return {\n            ...state,\n            isAuthenticated,\n            token : token,\n            failedMessage: ''\n        }\n\n\n        case SET_ADMIN_TOKEN:\n        \n        let  adminToken  = action.payload.token\n        let isAdminAuthenticated = false\n        if(adminToken){\n            isAdminAuthenticated = true\n        }else {\n            adminToken = ''\n        }\n\n        \n        return {\n            ...state,\n            isAdminAuthenticated,\n            adminToken,\n            failedMessage: ''\n        }\n\n        case CREATE_QUIZ_SESSION:\n        \n            let  quizToken  = action.payload\n            let isQuizTokenPresent = true\n\n            return {\n                ...state,\n                quizToken,\n                isQuizTokenPresent,\n                failedMessage: '',\n                \n            }\n\n\n        case ON_QUIZ_SUBMIT:\n        return {\n            ...state,\n            score : action.payload.finalScore\n        }\n\n        case AUTH_FAILED:\n        return {\n            ...state,\n            failedMessage : action.payload,\n        }\n\n        case DISPOSE_QUIZ_SUBMIT:\n        return {\n            ...state,\n            isQuizTokenPresent : false,\n            quizToken : '',\n            score : '',\n        }\n\n\n\n        case ON_TIMER_CHANGE:\n        return {\n            ...state,\n            timer : action.payload\n        }\n\n        default:\n            return state\n    }\n}","// this is just one of the reducers\n\nimport { GET_QUESTIONS , ON_QUIZ_SUBMIT } from '../actions/constants' \n//import testContent from '../test.json'\nconst initailState = {\n  testContent : [],\n  \n }\n// on calling this.props.getProfiles() this method get called for GET_PROFILES\n\n export default function(state = initailState , action){\n\n    switch(action.type){\n        case GET_QUESTIONS:\n        return {\n            ...state,\n            testContent : action.payload,\n        }\n        \n        default : \n            return state\n    }\n }\n","import { GET_ALL_RESULTS} from '../actions/constants'\n\n\n\nconst initialState = {\n    all_results : [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case GET_ALL_RESULTS: \n        return {\n            ...state,\n            all_results : action.payload,\n        }\n        \n        default:\n            return state\n    }\n}","// this is going to be root reducers\nimport { combineReducers } from 'redux'\nimport profileReducer from './profileReducer' \nimport authReducer from './authReducer' \nimport questionsReducers from './questionsReducers' \nimport quizResultReducer from './quizResultReducer' \n\n\n\nexport default combineReducers({\n    profile : profileReducer,\n    auth : authReducer,\n    questions : questionsReducers,\n    quizResults : quizResultReducer \n})","import { createStore, applyMiddleware , compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middelware = [thunk]\n\n\n//rootReducer : type : function \n//console.log('rootReducer() :', rootReducer());\n// on calling rootReducer()\n// export default function(state = initailState , action){\n//     switch(action.type){\n//         case GET_PROFILES:\n//             return {\n//                 ...state\n//             }\n//         default : \n//             return state\n//     }\n//  }\n\n\n//const store = createStore(rootReducer, initialState , applyMiddleware(...middelware))\n\n\nconst store = createStore(rootReducer, initialState ,\ncompose(\n    applyMiddleware(...middelware), \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\n\nexport default store\n","import React,{ Component } from 'react';\nimport RHome from './RHome';\nimport { ARTICLE_ID } from './actions/constants';\n\nimport { BrowserRouter as Router, Route , Switch } from 'react-router-dom'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport setAuthToken from './utils/setAuthToken'\nimport './App.css';\nimport { setCurrentUser , setCurrentAdmin } from './actions/authActions';\n\n\n// check for token \nif(localStorage.Token){\n  //set the auth token header auth \n  setAuthToken(localStorage.Token)\n  \n  \n  \n  // set user and isAuthenticated\n  const res_d = {}\n  res_d.token = localStorage.Token\n  store.dispatch(setCurrentUser(res_d))\n \n}\n\nif(localStorage.Admin_Token){\n  const res_admin_d = {}\n  res_admin_d.token = localStorage.Admin_Token\n  store.dispatch(setCurrentAdmin(res_admin_d))\n\n}\n\n\n\n\nclass App extends Component {\n  render() {  \n    return (\n      <Provider store={store}>\n        <Router>\n          <RHome/>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n\n// \"build\": \"npm run build:css && react-scripts build\",\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}